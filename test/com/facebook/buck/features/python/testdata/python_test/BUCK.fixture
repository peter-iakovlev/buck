python_test(
    name = "test-success",
    srcs = [
        "test_success.py",
    ],
)

python_test(
    name = "test-failure",
    srcs = [
        "test_failure.py",
    ],
)

python_test(
    name = "test-skip",
    srcs = [
        "test_skipped.py",
    ],
)

python_test(
    name = "test-env",
    srcs = [
        "test_env.py",
    ],
    env = {
        "PYTHON_TEST_ENV_VAR": "42",
    },
)

python_test(
    name = "test-spinning",
    srcs = [
        "test_spinning.py",
    ],
    test_rule_timeout_ms = 100,
)

python_test(
    name = "test-setup-class-failure",
    srcs = [
        "test_setup_class_failure.py",
    ],
)

python_test(
    name = "test-setup-class-failure-with-test-suite",
    srcs = [
        "test_setup_class_failure_with_test_suite.py",
    ],
)

python_binary(
    name = "binary-with-tests",
    main_module = "binary_main.py",
    tests = [
        "//:test-assigned-to-binary",
    ],
)

python_test(
    name = "test-assigned-to-binary",
    srcs = [
        "test_success.py",
    ],
    deps = [
        "//:binary-with-tests",
    ],
)

sh_binary(
    name = "sh_binary1",
    main = "sh_binary1.sh",
)

sh_binary(
    name = "sh_binary2",
    main = "sh_binary2.sh",
)

python_test(
    name = "test-deps-with-env-macros",
    srcs = [
        "test_deps_with_env_macros.py",
    ],
    env = {
        "TESTING_BINARIES": "$(location :sh_binary1) -- $(location :sh_binary2)",
    },
)

python_test_runner(
    name = "runner",
    src = "binary_main.py",
)

python_test(
    name = "testx",
    srcs = [
        "test_success.py",
    ],
    runner = ":runner",
    specs = {
        "my": "spec",
        "other": [
            {
                "complicated": "stuff",
            },
        ],
        "cmd": "out=\"$(abs_output testbin)\" && cd \$(dirname $out) && python $out",
    },
)
